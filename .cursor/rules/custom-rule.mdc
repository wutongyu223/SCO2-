---
description: #####
globs: 
alwaysApply: true
---
---
description: Global MATLAB Code Standard
globs: ["**/*.m", "**/*.mlx"]
alwaysApply: true

#始终优先选择简单方案
    ## 尽可能避免代码重复
        修改代码前，检查代码库中是否已存在相似功能或逻辑。编写代码时需区分不同环境
#仅针对明确需求进行更改，或确保修改内容与需求强相关且已被充分理解，
#修复问题时避免引入新技术/模式。优先彻底排查现有实现的可能性，若必须引入新方案，需同步移除旧逻辑以避免冗余。
#保持代码库整洁有序
#避免在文件中编写脚本
    ##尤其是仅需运行一次的脚本(如数据迁移临时脚本)控制单文件代码行数
    ##文件代码超过 200-300行 时需重构封装仅测试环境使用模拟数据


# Guidance
## 文件/目录
# - 每个模块一个子文件夹；test 脚本置于 tests/；
# - 禁止直接修改 generated/ 目录下的文件（自动生成）。

## 代码（MATLAB）
# 1. 避免复制粘贴：若两段代码相似度 ≥ 80% 则建议抽象函数。
# 2. 函数头须包含 H‑style docstring：
#    %> @brief  @param  @return  @author  @date
# 3. 所有数值常量写成参数或结构体字段；禁止魔法数字。
# 4. try‑catch 必须记录日志 log_error(…)，并重新抛出或优雅降级。
# 5. 参数检查：assert / validateattributes。

## 环境
# - 支持 dev (local) 与 prod (cluster) 两种运行模式，通过 ENV.MODE 切换。
# - 在 dev 环境下允许 verbose 日志与 mock 数据。
# - prod 环境禁止使用 pause、disp 大量调试输出。

failOnViolation: false
violationsIncludes: ["复制粘贴", "魔法数字", "缺少 docstring"]
---
